// Copyright 2020 Lennart Espe
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tavern.proto

package tavern

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Peer struct {
	Addr                 string   `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Peer) Reset()         { *m = Peer{} }
func (m *Peer) String() string { return proto.CompactTextString(m) }
func (*Peer) ProtoMessage()    {}
func (*Peer) Descriptor() ([]byte, []int) {
	return fileDescriptor_deabe21a49cb4ef2, []int{0}
}

func (m *Peer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Peer.Unmarshal(m, b)
}
func (m *Peer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Peer.Marshal(b, m, deterministic)
}
func (m *Peer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Peer.Merge(m, src)
}
func (m *Peer) XXX_Size() int {
	return xxx_messageInfo_Peer.Size(m)
}
func (m *Peer) XXX_DiscardUnknown() {
	xxx_messageInfo_Peer.DiscardUnknown(m)
}

var xxx_messageInfo_Peer proto.InternalMessageInfo

func (m *Peer) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type ListResponse struct {
	Peers                []*Peer  `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
	Interval             int64    `protobuf:"varint,2,opt,name=interval,proto3" json:"interval,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}
func (*ListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_deabe21a49cb4ef2, []int{1}
}

func (m *ListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse.Unmarshal(m, b)
}
func (m *ListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse.Marshal(b, m, deterministic)
}
func (m *ListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse.Merge(m, src)
}
func (m *ListResponse) XXX_Size() int {
	return xxx_messageInfo_ListResponse.Size(m)
}
func (m *ListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse proto.InternalMessageInfo

func (m *ListResponse) GetPeers() []*Peer {
	if m != nil {
		return m.Peers
	}
	return nil
}

func (m *ListResponse) GetInterval() int64 {
	if m != nil {
		return m.Interval
	}
	return 0
}

type ListRequest struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_deabe21a49cb4ef2, []int{2}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type AnnounceRequest struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Addr                 string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnnounceRequest) Reset()         { *m = AnnounceRequest{} }
func (m *AnnounceRequest) String() string { return proto.CompactTextString(m) }
func (*AnnounceRequest) ProtoMessage()    {}
func (*AnnounceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_deabe21a49cb4ef2, []int{3}
}

func (m *AnnounceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnnounceRequest.Unmarshal(m, b)
}
func (m *AnnounceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnnounceRequest.Marshal(b, m, deterministic)
}
func (m *AnnounceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnnounceRequest.Merge(m, src)
}
func (m *AnnounceRequest) XXX_Size() int {
	return xxx_messageInfo_AnnounceRequest.Size(m)
}
func (m *AnnounceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AnnounceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AnnounceRequest proto.InternalMessageInfo

func (m *AnnounceRequest) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *AnnounceRequest) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type AnnounceResponse struct {
	Interval             int64    `protobuf:"varint,1,opt,name=interval,proto3" json:"interval,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnnounceResponse) Reset()         { *m = AnnounceResponse{} }
func (m *AnnounceResponse) String() string { return proto.CompactTextString(m) }
func (*AnnounceResponse) ProtoMessage()    {}
func (*AnnounceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_deabe21a49cb4ef2, []int{4}
}

func (m *AnnounceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnnounceResponse.Unmarshal(m, b)
}
func (m *AnnounceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnnounceResponse.Marshal(b, m, deterministic)
}
func (m *AnnounceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnnounceResponse.Merge(m, src)
}
func (m *AnnounceResponse) XXX_Size() int {
	return xxx_messageInfo_AnnounceResponse.Size(m)
}
func (m *AnnounceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AnnounceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AnnounceResponse proto.InternalMessageInfo

func (m *AnnounceResponse) GetInterval() int64 {
	if m != nil {
		return m.Interval
	}
	return 0
}

func init() {
	proto.RegisterType((*Peer)(nil), "tavern.Peer")
	proto.RegisterType((*ListResponse)(nil), "tavern.ListResponse")
	proto.RegisterType((*ListRequest)(nil), "tavern.ListRequest")
	proto.RegisterType((*AnnounceRequest)(nil), "tavern.AnnounceRequest")
	proto.RegisterType((*AnnounceResponse)(nil), "tavern.AnnounceResponse")
}

func init() { proto.RegisterFile("tavern.proto", fileDescriptor_deabe21a49cb4ef2) }

var fileDescriptor_deabe21a49cb4ef2 = []byte{
	// 234 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0x4d, 0xbb, 0x2e, 0x75, 0x1a, 0x50, 0x46, 0xc1, 0x90, 0xd3, 0x9a, 0xd3, 0x9e, 0xf6,
	0xd0, 0x9e, 0x3c, 0x89, 0x77, 0x11, 0x09, 0xbe, 0x40, 0xb4, 0x03, 0x2d, 0x48, 0xb2, 0x26, 0x69,
	0x8f, 0x3e, 0xbb, 0x6c, 0xd2, 0xd4, 0x5d, 0x05, 0x6f, 0x33, 0x99, 0xc9, 0xf7, 0x7f, 0x21, 0xc0,
	0xa3, 0x39, 0x90, 0xb7, 0x5d, 0xef, 0x5d, 0x74, 0x58, 0xe7, 0x4e, 0x49, 0xa8, 0x5e, 0x88, 0x3c,
	0x22, 0x54, 0x66, 0xb3, 0xf1, 0x82, 0x35, 0xac, 0xbd, 0xd0, 0xa9, 0x56, 0xcf, 0xc0, 0x9f, 0x76,
	0x21, 0x6a, 0x0a, 0xbd, 0xb3, 0x81, 0x50, 0xc1, 0x79, 0x4f, 0xe4, 0x83, 0x60, 0xcd, 0xbc, 0x5d,
	0xae, 0x78, 0x77, 0x24, 0x0e, 0x00, 0x9d, 0x47, 0x28, 0x61, 0xb1, 0xb3, 0x91, 0xfc, 0xc1, 0x7c,
	0x88, 0x59, 0xc3, 0xda, 0xb9, 0x3e, 0xf5, 0xea, 0x0e, 0x96, 0x99, 0xf7, 0xb9, 0xa7, 0x10, 0x87,
	0xc8, 0xad, 0x09, 0xdb, 0x14, 0xc9, 0x75, 0xaa, 0xd5, 0x3d, 0x5c, 0x3e, 0x5a, 0xeb, 0xf6, 0xf6,
	0x9d, 0xfe, 0x59, 0x3b, 0xd9, 0xce, 0x46, 0xb6, 0x1d, 0x5c, 0xfd, 0x5c, 0x3d, 0x1a, 0x8f, 0x6d,
	0xd8, 0xd4, 0x66, 0xf5, 0x05, 0xf5, 0x6b, 0xf2, 0xc7, 0x35, 0x54, 0x83, 0x17, 0x5e, 0x97, 0x07,
	0x8d, 0x2c, 0xe5, 0xcd, 0xf4, 0x30, 0x83, 0xd5, 0x19, 0x3e, 0xc0, 0xa2, 0xc4, 0xe1, 0x6d, 0xd9,
	0xf9, 0xe5, 0x2e, 0xc5, 0xdf, 0x41, 0x01, 0xbc, 0xd5, 0xe9, 0x23, 0xd6, 0xdf, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x29, 0x15, 0xe0, 0xc5, 0x98, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TavernClient is the client API for Tavern service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TavernClient interface {
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
	Announce(ctx context.Context, in *AnnounceRequest, opts ...grpc.CallOption) (*AnnounceResponse, error)
}

type tavernClient struct {
	cc *grpc.ClientConn
}

func NewTavernClient(cc *grpc.ClientConn) TavernClient {
	return &tavernClient{cc}
}

func (c *tavernClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/tavern.Tavern/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tavernClient) Announce(ctx context.Context, in *AnnounceRequest, opts ...grpc.CallOption) (*AnnounceResponse, error) {
	out := new(AnnounceResponse)
	err := c.cc.Invoke(ctx, "/tavern.Tavern/Announce", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TavernServer is the server API for Tavern service.
type TavernServer interface {
	List(context.Context, *ListRequest) (*ListResponse, error)
	Announce(context.Context, *AnnounceRequest) (*AnnounceResponse, error)
}

// UnimplementedTavernServer can be embedded to have forward compatible implementations.
type UnimplementedTavernServer struct {
}

func (*UnimplementedTavernServer) List(ctx context.Context, req *ListRequest) (*ListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedTavernServer) Announce(ctx context.Context, req *AnnounceRequest) (*AnnounceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Announce not implemented")
}

func RegisterTavernServer(s *grpc.Server, srv TavernServer) {
	s.RegisterService(&_Tavern_serviceDesc, srv)
}

func _Tavern_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TavernServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tavern.Tavern/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TavernServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tavern_Announce_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AnnounceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TavernServer).Announce(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tavern.Tavern/Announce",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TavernServer).Announce(ctx, req.(*AnnounceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Tavern_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tavern.Tavern",
	HandlerType: (*TavernServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Tavern_List_Handler,
		},
		{
			MethodName: "Announce",
			Handler:    _Tavern_Announce_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tavern.proto",
}
